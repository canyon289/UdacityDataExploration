install.packages(zoo)
install.packages("zoo")
setwd("D:/Github/UdacityDataExploration/Project 4")
source('~/.active-rstudio-document', echo=TRUE)
cont_box_plot = ggplot(df, aes(y=contb_receipt_amt, x="Contributions")) +
geom_boxplot()
cont_box_plot
cont_box_plot
cont_box_plot + scale_y_log10()
temp_df = df %>% select(contbr_st, election_year, contb_receipt_amt) %>%
group_by(contbr_st, election_year) %>%
summarise(Number_of_Contributions = n(),
Sum_of_Contributions = sum(contb_receipt_amt)
)
ggplot(temp_df, aes(x = as.factor(election_year), y = Number_of_Contributions,
fill = contbr_st )) + geom_bar(stat = "identity", position = "dodge") +
ggtitle("Count of Contributions per state")
ggplot(temp_df, aes(x = as.factor(election_year), y = Sum_of_Contributions,
fill = contbr_st )) + geom_bar(stat = "identity", position = "dodge") +
ggtitle("Sum of Contributions per state in Dollars") +
scale_y_continuous(labels = dollar)
population_ratio = function(x, contbr_st) {
# trace()
ca_population = 38000000
wi_population = 5700000
if (all(contbr_st == "CA")) {
return(x/ca_population)
}
if (all(contbr_st == "WI")) {
return(x/wi_population)
}
}
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
temp_df_population = temp_df %>% filter(election_year !=2018) %>%
mutate(Ratio_of_Number_of_Contributions = population_ratio(Number_of_Contributions, contbr_st),
Ratio_of_Sum_of_Contributions = population_ratio(Sum_of_Contributions, contbr_st))
ggplot(temp_df_population, aes(x = as.factor(election_year),
y = Ratio_of_Number_of_Contributions , fill = contbr_st )) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Population Ratio of Count of Contributions per state")
ggplot(temp_df_population, aes(x = as.factor(election_year),
y = Ratio_of_Sum_of_Contributions, fill = contbr_st)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Population Ratio of Sum of Contributions per state in Dollars") +
scale_y_continuous(labels = dollar)
temp_df = df %>% select(contbr_employer, contb_receipt_amt) %>%
group_by(contbr_employer) %>%
summarise(total_receipts = sum(contb_receipt_amt)) %>%
top_n(n = 5)
ggplot(temp_df, aes(x = as.factor(contbr_employer), y = total_receipts)) +
geom_bar(stat = "identity") +
ggtitle(" Sum of Contributions by Employer") +
scale_y_continuous(labels = dollar)
ggplot(df, aes(x = contb_receipt_amt)) + geom_histogram()
ggplot(df, aes(x = contb_receipt_amt, fill = contbr_st)) + geom_histogram() +
scale_x_log10()
ggplot(df, aes(x = contb_receipt_amt, color = contbr_st)) +
geom_density(size = 1) + scale_x_log10()
five = data.frame(df["contb_receipt_amt"] %% 5 == 0)
ggplot(five, aes(x=contb_receipt_amt)) + geom_bar()
#Bin by week
df["donation_bin"] = floor_date(df[,"contb_receipt_dt"], 'week')
temp_df = df %>% select(donation_bin, contb_receipt_amt) %>%
group_by(donation_bin) %>%
summarise(Number_of_Contributions = n(),
Sum_of_Contributions = sum(contb_receipt_amt),
Average_Contribution = mean(contb_receipt_amt)
)
average_df = temp_df
ggplot(temp_df, aes(x=donation_bin, y = Sum_of_Contributions)) + geom_line() +
scale_y_continuous(labels = dollar) +
ggtitle("Dollar Value of contributions per bin") +
geom_vline(xintercept=as.numeric(dmy("6-11-12")), colour = 'red')
ggplot(temp_df, aes(x=donation_bin, y = Number_of_Contributions)) +
geom_line() + ggtitle("Number of Contributions of contributions per bin")
ggplot(temp_df, aes(x=donation_bin, y = Average_Contribution)) +
geom_line() + scale_y_continuous(labels = dollar) +
ggtitle("Average Contribution over Time") +
geom_vline(xintercept=as.numeric(dmy("6-11-12")), colour = 'red')+ stat_smooth()
ggplot(df, aes(x=donation_bin, y=contb_receipt_amt)) + stat_smooth()
temp_df = df %>% select(cand_nm, contb_receipt_amt, contbr_st) %>%
group_by(cand_nm, contbr_st) %>%
summarise(total_receipts = sum(contb_receipt_amt)) %>%
group_by(contbr_st) %>% top_n(n = 5)
ggplot(temp_df,
aes(x = as.factor(cand_nm), y = total_receipts, fill = contbr_st)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle(" Sum of Contributions per State per Candidate in Dollars") +
scale_y_continuous(labels = dollar)
temp_df = df %>% select(contb_receipt_dt, contb_receipt_amt,
contbr_st, election_year) %>%
filter(election_year == 2012) %>%
group_by(contb_receipt_dt, contbr_st) %>%
summarise(Number_of_Contributions = n(),
Sum_of_Contributions = sum(contb_receipt_amt)
)
ggplot(temp_df, aes(x=contb_receipt_dt, y = Number_of_Contributions,
color = contbr_st)) + geom_line() +
ggtitle("Number contributions per day per state")
top_candidates = temp_df = df %>% select(cand_nm, contb_receipt_amt,
election_year) %>%
filter(election_year == 2016) %>%
group_by(cand_nm) %>%
summarise(total_receipts = sum(contb_receipt_amt)) %>%
top_n(n = 5)
temp_df = df %>% select(contb_receipt_dt, contb_receipt_amt,
contbr_st, cand_nm, election_year) %>%
mutate(year = year(df[,"contb_receipt_dt"]),
month = month(df[,"contb_receipt_dt"])) %>%
filter(election_year == 2016, year == 2015,
cand_nm %in% top_candidates[["cand_nm"]]) %>%
group_by(cand_nm, month) %>%
summarise(Number_of_Contributions = n(),
Sum_of_Contributions = sum(contb_receipt_amt)
)
cand_plot = ggplot(temp_df, aes(x=month, y = Sum_of_Contributions,
color = cand_nm)) + geom_line(size = 1.2) +
ggtitle("Sum of Contributions per Candidate for Top 5 in 2014")  +
scale_y_continuous(labels = dollar)
cand_plot
p1 = ggplot(temp_df_population, aes(x = as.factor(election_year),
y = Ratio_of_Number_of_Contributions , fill = contbr_st )) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Population Ratio \n of Count of Contributions \n as of 11/14/15") +
ylab("Number of Contributions per Person") + xlab("Election Year") +
theme(legend.position="none")
p2 = ggplot(temp_df_population, aes(x = as.factor(election_year),
y = Ratio_of_Sum_of_Contributions, fill = contbr_st)) +
geom_bar(stat = "identity", position = "dodge") +
ggtitle("Population Ratio of Sum \n of Contributions in Dollars \n as of 11/14/15") +
scale_y_continuous(labels = dollar) +
ylab("Dollar Value of Contributions per Person") +
xlab("Election Year") + labs(fill = "State")
multiplot(p1,p2, cols = 2)
ggplot(average_df, aes(x=donation_bin, y = Average_Contribution)) +
geom_line() +
scale_y_continuous(labels = dollar) +
ggtitle("Average Contribution per week") +
geom_vline(aes(xintercept=as.numeric(dmy("6-11-12")),
colour = "Election Day", labels="2012 Election"), show_guide=TRUE) +
stat_smooth() + ylab("Weekly Contribution Average") + xlab("Time") +
labs(color='Legend')
cand_plot + ylab("Sum of Contributions") + xlab("Month") + labs(color = "Name")
