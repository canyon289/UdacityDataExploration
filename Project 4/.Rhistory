library(kernlab)
install.package(kernlab)
install.packages(kernlan)
install.packages(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
head(spam)
library(ggplot2)
str(spam)
ggplot(spam, aes(x=your)) + stat_density()
ggplot(spam, aes(x=your, color = type)) + stat_density()
ggplot(spam, aes(x=your, color = type)) + stat_density(fill = none)
ggplot(spam, aes(x=your, color = type)) + geom_density(fill = none)
ggplot(spam, aes(x=your, color = type)) + geom_density()
ggplot(spam, aes(x=your, color = type)) + geom_density() + xlab("Frequency of your")
ggplot(spam, aes(x=your, color = type)) + geom_density() + xlab("Frequency of 'your'")
set.seed(333)
dim(spam)
smallSpam = spam[sample(dim(spam)[1], size=10),]
smallSpam
dim(spam)[1], size=10)
dim(spam)[1], size=10)
sample(dim(spam)[1], size=10)
smallSpam$type
smallSpam$type*1
(smallSpam$type)*1
(smallSpam$type == "spam")*1
(smallSpam$type == "spam")
(smallSpam$type == "spam") + 1
(smallSpam$type == "spam")*1 + 1
?plot
?table
install.packages("caret", dependencies = c("Depends", "Suggests"))
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(lubridate)
library(scales)
table(df["election_year"], exclude = F)
#2102 is likely a a typo. Converting to 2012
df[which(df["election_year"] == 2102), "election_year"] = 2012
#Removing all values from 2008
df = df[df["election_year"] != 2008,]
#Check again to see that everything took place correctly
table(df["election_year"], exclude = F)
df
# Need to specify columns due to trailing comma in files
cols = c("cmte_id","cand_id","cand_nm","contbr_nm","contbr_city","contbr_st",
"contbr_zip","contbr_employer","contbr_occupation","contb_receipt_amt",
"contb_receipt_dt","receipt_desc","memo_cd","memo_text","form_tp","file_num",
"tran_id","election_tp", "DISCARD")
#Load and bind california dataframes
ca_df_2012 = read.csv(unzip("data/P00000001-CA_2012.zip"), col.names = cols, header = F, skip = 1)
ca_df_2016 = read.csv(unzip("data/P00000001-CA_2016.zip"), col.names = cols, header = F, skip = 1)
ca_df = rbind(ca_df_2012, ca_df_2016)
#Load and bind Wisconsin files
wi_df_2012 = read.csv(unzip("data/P00000001-WI_2012.zip"), col.names = cols, header = F, skip = 1)
#Some trouble with letters in zip code
#Removing occurence of letterL
wi_df_2012["contbr_zip"] = gsub("L", "", wi_df_2012[["contbr_zip"]])
#Load and bind 2016 data
wi_df_2016 = read.csv(unzip("data/P00000001-WI_2016.zip"), col.names = cols, header = F, skip = 1)
wi_df = rbind(wi_df_2012, wi_df_2016)
#Bind all into one dataframe
df = rbind(ca_df, wi_df)
#Election_tp columns looks like G2012, Splitting into type and year
df["election_year"] = as.integer(substr(df[["election_tp"]], 2,5))
df["election_type"] = substr(df[["election_tp"]], 0,1)
#Convert Contribution receipt to date
df["contb_receipt_dt"] = dmy(df[["contb_receipt_dt"]])
cols = c("cmte_id","cand_id","cand_nm","contbr_nm","contbr_city","contbr_st",
"contbr_zip","contbr_employer","contbr_occupation","contb_receipt_amt",
"contb_receipt_dt","receipt_desc","memo_cd","memo_text","form_tp","file_num",
"tran_id","election_tp", "DISCARD")
#Load and bind california dataframes
ca_df_2012 = read.csv(unzip("data/P00000001-CA_2012.zip"), col.names = cols, header = F, skip = 1)
setwd("~/GitHub/UdacityDataExploration/Project 4")
# Need to specify columns due to trailing comma in files
cols = c("cmte_id","cand_id","cand_nm","contbr_nm","contbr_city","contbr_st",
"contbr_zip","contbr_employer","contbr_occupation","contb_receipt_amt",
"contb_receipt_dt","receipt_desc","memo_cd","memo_text","form_tp","file_num",
"tran_id","election_tp", "DISCARD")
#Load and bind california dataframes
ca_df_2012 = read.csv(unzip("data/P00000001-CA_2012.zip"), col.names = cols, header = F, skip = 1)
ca_df_2016 = read.csv(unzip("data/P00000001-CA_2016.zip"), col.names = cols, header = F, skip = 1)
ca_df = rbind(ca_df_2012, ca_df_2016)
#Load and bind Wisconsin files
wi_df_2012 = read.csv(unzip("data/P00000001-WI_2012.zip"), col.names = cols, header = F, skip = 1)
#Some trouble with letters in zip code
#Removing occurence of letterL
wi_df_2012["contbr_zip"] = gsub("L", "", wi_df_2012[["contbr_zip"]])
#Load and bind 2016 data
wi_df_2016 = read.csv(unzip("data/P00000001-WI_2016.zip"), col.names = cols, header = F, skip = 1)
wi_df = rbind(wi_df_2012, wi_df_2016)
#Bind all into one dataframe
df = rbind(ca_df, wi_df)
#Election_tp columns looks like G2012, Splitting into type and year
df["election_year"] = as.integer(substr(df[["election_tp"]], 2,5))
df["election_type"] = substr(df[["election_tp"]], 0,1)
#Convert Contribution receipt to date
df["contb_receipt_dt"] = dmy(df[["contb_receipt_dt"]])
rm(list=setdiff(ls(), "df"))
table(df["election_year"], exclude = F)
#2102 is likely a a typo. Converting to 2012
df[which(df["election_year"] == 2102), "election_year"] = 2012
#Removing all values from 2008
df = df[df["election_year"] != 2008,]
#Check again to see that everything took place correctly
table(df["election_year"], exclude = F)
names(df)
head(df[df["contb_receipt_dt"] <0])
head(df["contb_receipt_dt"])
head(df[df["contb_receipt_amt"] < 0])
df["contb_receipt_amt"] < 0
head(df)
head(df[df["contb_receipt_amt"] < 0,])
head(df[df["contb_receipt_amt"] < 0,], 20)
temp_df = df %>% select(contbr_st, election_year, contb_receipt_amt) %>%
group_by(contbr_st, election_year) %>%
summarise(Number_of_Contributions = n(),
Sum_of_Contributions = sum(contb_receipt_amt)
)
ggplot(temp_df, aes(x = as.factor(election_year), y = Number_of_Contributions, fill = contbr_st )) + geom_bar(stat = "identity", position = "dodge") + ggtitle("Count of Contributions per state")
ggplot(temp_df, aes(x = as.factor(election_year), y = Sum_of_Contributions, fill = contbr_st )) + geom_bar(stat = "identity", position = "dodge") + ggtitle("Sum of Contributions per state in Dollars") + scale_y_continuous(labels = dollar)
shape(df[df["contb_receipt_amt"] < 0]))
shape(df[df["contb_receipt_amt"] < 0])
dim(df[df["contb_receipt_amt"] < 0])
df[df["contb_receipt_amt"] < 0]
df_negative = df[df["contb_receipt_amt"] < 0,]
shape(df_negative)
dim(df_negative)
sum(df_negative["contb_receipt_amt"])
sum(df_negative[,"contb_receipt_amt"])
summary(df_negative)
sum(df["contb_receipt_amt"])
sum(df["contb_receipt_amt"], na.rm = True)
sum(df["contb_receipt_amt"], na.rm = T)
?sorted
??order
df_negative = df[order["contb_receipt_amt"],]
df_negative = df[order("contb_receipt_amt"),]
df_negative(head)
head(df_negative)
df_negative
df_negative = df[df["contb_receipt_amt"] < 0,]
dim(df_negative)
df_negative = df_negative[order("contb_receipt_amt"),]
df_negative
df_negative = df[df["contb_receipt_amt"] < 0,]
head(df_negative[order("contb_receipt_amt"),])
order("contb_receipt_amt")
order(contb_receipt_amt)
head(df_negative[order(contb_receipt_amt),])
head(df_negative[order(df[,"contb_receipt_amt"]),])
tail(df_negative[order(df[,"contb_receipt_amt"]),])
order(df[,"contb_receipt_amt"])
df_negative[order(df[,"contb_receipt_amt"])]
df_negative[order(df[,"contb_receipt_amt"],)]
df_negative[order(df[,"contb_receipt_amt"]),]
# Need to specify columns due to trailing comma in files
cols = c("cmte_id","cand_id","cand_nm","contbr_nm","contbr_city","contbr_st",
"contbr_zip","contbr_employer","contbr_occupation","contb_receipt_amt",
"contb_receipt_dt","receipt_desc","memo_cd","memo_text","form_tp","file_num",
"tran_id","election_tp", "DISCARD")
#Load and bind california dataframes
ca_df_2012 = read.csv(unzip("data/P00000001-CA_2012.zip"), col.names = cols, header = F, skip = 1)
ca_df_2016 = read.csv(unzip("data/P00000001-CA_2016.zip"), col.names = cols, header = F, skip = 1)
ca_df = rbind(ca_df_2012, ca_df_2016)
#Load and bind Wisconsin files
wi_df_2012 = read.csv(unzip("data/P00000001-WI_2012.zip"), col.names = cols, header = F, skip = 1)
#Some trouble with letters in zip code
#Removing occurence of letterL
wi_df_2012["contbr_zip"] = gsub("L", "", wi_df_2012[["contbr_zip"]])
#Load and bind 2016 data
wi_df_2016 = read.csv(unzip("data/P00000001-WI_2016.zip"), col.names = cols, header = F, skip = 1)
wi_df = rbind(wi_df_2012, wi_df_2016)
#Bind all into one dataframe
df = rbind(ca_df, wi_df)
#Election_tp columns looks like G2012, Splitting into type and year
df["election_year"] = as.integer(substr(df[["election_tp"]], 2,5))
df["election_type"] = substr(df[["election_tp"]], 0,1)
#Convert Contribution receipt to date
df["contb_receipt_dt"] = dmy(df[["contb_receipt_dt"]])
#Remove all objects except final df
rm(list=setdiff(ls(), "df"))
table(df["election_year"], exclude = F)
#2102 is likely a a typo. Converting to 2012
df[which(df["election_year"] == 2102), "election_year"] = 2012
#Removing all values from 2008
df = df[df["election_year"] != 2008,]
#Check again to see that everything took place correctly
table(df["election_year"], exclude = F)
head(df[is.na(df["election_year"]),])
summary(df[is.na(df["election_year"]),])
df_null = df[is.na(df["election_year"]),]
df = df[!is.na(df["election_year"]),]
head(df_null)
table(df["election_year"], exclude = F)
head(df[is.na(df["election_year"]),])
head(df_null)
head(df_null,30)
head(df_null,100)
table(df["election_year"], exclude = F)
# Need to specify columns due to trailing comma in files
cols = c("cmte_id","cand_id","cand_nm","contbr_nm","contbr_city","contbr_st",
"contbr_zip","contbr_employer","contbr_occupation","contb_receipt_amt",
"contb_receipt_dt","receipt_desc","memo_cd","memo_text","form_tp","file_num",
"tran_id","election_tp", "DISCARD")
#Load and bind california dataframes
ca_df_2012 = read.csv(unzip("data/P00000001-CA_2012.zip"), col.names = cols, header = F, skip = 1)
ca_df_2016 = read.csv(unzip("data/P00000001-CA_2016.zip"), col.names = cols, header = F, skip = 1)
ca_df = rbind(ca_df_2012, ca_df_2016)
#Load and bind Wisconsin files
wi_df_2012 = read.csv(unzip("data/P00000001-WI_2012.zip"), col.names = cols, header = F, skip = 1)
#Some trouble with letters in zip code
#Removing occurence of letterL
wi_df_2012["contbr_zip"] = gsub("L", "", wi_df_2012[["contbr_zip"]])
#Load and bind 2016 data
wi_df_2016 = read.csv(unzip("data/P00000001-WI_2016.zip"), col.names = cols, header = F, skip = 1)
wi_df = rbind(wi_df_2012, wi_df_2016)
#Bind all into one dataframe
df = rbind(ca_df, wi_df)
#Election_tp columns looks like G2012, Splitting into type and year
df["election_year"] = as.integer(substr(df[["election_tp"]], 2,5))
df["election_type"] = substr(df[["election_tp"]], 0,1)
#Convert Contribution receipt to date
df["contb_receipt_dt"] = dmy(df[["contb_receipt_dt"]])
#Remove all objects except final df
rm(list=setdiff(ls(), "df"))
table(df["election_year"], exclude = F)
df[which(df["election_year"] == 2102), "election_year"] = 2012
table(df["election_year"], exclude = F)
head(df[is.na(df["election_year"]),])
df_null = df[is.na(df["election_year"]),]
head(df_null)
df = df[!is.na(df["election_year"]),]
df_negative = df_[df["contb_receipt_amt"] < 0,]
df_negative = df[df["contb_receipt_amt"] < 0,]
df_negative = df_negative[order("contb_receipt_amt"),]
mt
df_negative = df_negative[order(df["contb_receipt_amt"]),]
df_negative = df_negative[order(df[,"contb_receipt_amt"]),]
df_negative = df[df["contb_receipt_amt"] < 0,]
df_negative = df_negative[order(df[,"contb_receipt_amt"]),]
df_negative = df[df["contb_receipt_amt"] < 0,]
df_negative = df_negative[order(df_negative[,"contb_receipt_amt"]),]
head(df_negative)
sum(df_negative[,"contb_receipt_amt"])
df_negative = df[df["contb_receipt_amt"] <= 0,]
df = df[df["contb_receipt_amt"] > 0,]
sum(df[,"contb_receipt_amt"])
refunds = sum(df_negative[,"contb_receipt_amt"])
donations = sum(df[,"contb_receipt_amt"])
refunds/(donations - refunds)
